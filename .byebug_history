continue
@post.is_a?(:to_s)
@post.is_a?(String)
@post.is_a?(ClassName)
@post.is_a?
fullness(p)
p
p.fullness
p.fullness = 60
p.fullness
fullness(p)
p.class
p.count
p = Post.new
fullness
@avg_fullness.class
fullness.class
@post.class
a.class
fullness(a)
a = [10, 20, 30]
fullness(@posts)
fullness
avg_fullnesses
fullness(1)
fullness(10.4)
fullness(10)
continue
fullness(@avg_fullness)
@avg_fullness
@coffeeshop.name
@coffeeshop.posts.count
@post
fullness(@avg_fullness)
fullness(avg_fullness)
fullness
continue
@avg_fullness
@post
@coffeeshop.posts
@coffeeshop
@user
continue
0 || fullness(@coffeeshop.posts)
fullness(@coffeeshop.posts) || 0
@coffeeshop.posts || 0
@coffee.posts || 0
@coffeeshop.posts
@coffeeshop
@post
Post.create!(description: "hello", fullness: 60, user_id: 1, coffeeshop_id: 1)
p.valid?
p.description.valid?
p.description.valid
p.description
p
p]
p.save
p.valid?
p.user_id
p.type
p
p = Post.new
type(@coffeeshop)
@coffeeshop
type(avg_fullness)
Post.create!(description: "hello", fullness: 60, user_id: 1, coffeeshop_id: 1)
Post.create!
a.save
a = Post.new
Post.create(description: "hello", fullness: 60, user_id: 1, coffeeshop_id: 1)
Post.create
@post
@avg_fullness
@coffeeshop.posts
continue
Post.all
Posts.all
fullness(@coffeeshop.posts)
@coffeeshop.posts
@avg_fullness
@coffeeshop
continue
@coffeeshop
continue
exit
blue.posts.count
blue.posts
blue
blue = Coffeeshop.find(1)
Coffeeshop.all
@coffeeshop
@avg_fullness
avg_fullness
University.all
Post.all
info
